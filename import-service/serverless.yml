service: import-service

frameworkVersion: "3"

provider:
  name: aws
  runtime: nodejs14.x
  stage: dev
  region: eu-west-1

  environment:
    BUCKET: backend-import-service-bucket
    REGION: ${self:provider.region}
    SQS_URL: https://sqs.eu-west-1.amazonaws.com/508529194395/catalogItemsQueue

  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "s3:*"
      Resource:
        - "arn:aws:s3:::${self:provider.environment.BUCKET}"
        - "arn:aws:s3:::${self:provider.environment.BUCKET}/*"
    - Effect: "Allow"
      Action:
        - "sqs:*"
      Resource:
        - "arn:aws:sqs:eu-west-1:508529194395:catalogItemsQueue"

plugins:
  - serverless-offline

functions:
  importProductsFile:
    handler: handlers/importProductsFile/index.importProductsFile
    events:
      - http:
          path: import
          method: get
          cors: true
          request:
            parameters:
              querystrings:
                name: true
          authorizer:
            arn: arn:aws:lambda:eu-west-1:508529194395:function:authorization-service-dev-basicAuthorizer
            type: "token"
  importFileParser:
    handler: handlers/importFileParser/index.importFileParser
    events:
      - s3:
          bucket: ${self:provider.environment.BUCKET}
          event: s3:ObjectCreated:*
          rules:
            - prefix: uploaded/
          existing: true

resources:
  Resources:
    GatewayResponseDefault4XX:
      Type: "AWS::ApiGateway::GatewayResponse"
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
        ResponseType: DEFAULT_4XX
        RestApiId:
          Ref: "ApiGatewayRestApi"
